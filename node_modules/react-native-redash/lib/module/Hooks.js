import _toConsumableArray from"@babel/runtime/helpers/toConsumableArray";import Animated from"react-native-reanimated";import{useRef}from"react";import{onGestureEvent,panGestureHandler,pinchGestureHandler,rotationGestureHandler,tapGestureHandler}from"./Gesture";import{vec}from"./Vectors";import{loop}from"./AnimationRunners";var Clock=Animated.Clock,Value=Animated.Value,diff=Animated.diff,set=Animated.set,useCode=Animated.useCode,debug=Animated.debug,block=Animated.block;var useLazyRef=function useLazyRef(initializer){var ref=useRef();if(ref.current===undefined){ref.current=initializer();}return ref.current;};export var useGestureHandler=function useGestureHandler(nativeEvent){return useLazyRef(function(){return onGestureEvent(nativeEvent);});};export var usePanGestureHandler=function usePanGestureHandler(){return useLazyRef(function(){return panGestureHandler();});};export var useRotationGestureHandler=function useRotationGestureHandler(){return useLazyRef(function(){return rotationGestureHandler();});};export var usePinchGestureHandler=function usePinchGestureHandler(){return useLazyRef(function(){return pinchGestureHandler();});};export var useTapGestureHandler=function useTapGestureHandler(){return useLazyRef(function(){return tapGestureHandler();});};export var useVector=function useVector(){for(var _len=arguments.length,defaultValues=new Array(_len),_key=0;_key<_len;_key++){defaultValues[_key]=arguments[_key];}return useLazyRef(function(){return vec.createValue.apply(vec,defaultValues);});};export var useVectors=function useVectors(){for(var _len2=arguments.length,defaultValues=new Array(_len2),_key2=0;_key2<_len2;_key2++){defaultValues[_key2]=arguments[_key2];}return useLazyRef(function(){return defaultValues.map(function(values){return vec.createValue.apply(vec,_toConsumableArray(values));});});};export var useClock=function useClock(){return useLazyRef(function(){return new Clock();});};export var useValue=function useValue(value){return useLazyRef(function(){return new Value(value);});};export var useLoop=function useLoop(){var duration=arguments.length>0&&arguments[0]!==undefined?arguments[0]:1000;var boomerang=arguments.length>1&&arguments[1]!==undefined?arguments[1]:true;var progress=useValue(0);useCode(function(){return set(progress,loop({duration:duration,boomerang:boomerang}));},[progress]);return progress;};export var useValues=function useValues(){for(var _len3=arguments.length,values=new Array(_len3),_key3=0;_key3<_len3;_key3++){values[_key3]=arguments[_key3];}return useLazyRef(function(){return values.map(function(v){return new Value(v);});});};export var useClocks=function useClocks(numberOfClocks){return useLazyRef(function(){return new Array(numberOfClocks).fill(0).map(function(){return new Clock();});});};export var useDiff=function useDiff(node){var dDiff=useValue(0);useCode(function(){return set(dDiff,diff(node));},[dDiff,node]);return dDiff;};export var useDebug=function useDebug(values){var keys=Object.keys(values);useCode(function(){return block(keys.map(function(name){return debug(name,values[name]);}));},[keys,values]);};
//# sourceMappingURL=Hooks.js.map